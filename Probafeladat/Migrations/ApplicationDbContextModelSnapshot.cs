// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Probafeladat.Data;

namespace Probafeladat.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Probafeladat.Models.Package", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("ShippingStateID");

                    b.Property<string>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("ShippingStateID");

                    b.HasIndex("UserId");

                    b.ToTable("Packages");

                    b.HasData(
                        new { ID = 1, Identifier = "ZQXT6213", ShippingStateID = 3 },
                        new { ID = 2, Identifier = "DSZK4938", ShippingStateID = 5 },
                        new { ID = 3, Identifier = "OOOX6962", ShippingStateID = 1 },
                        new { ID = 4, Identifier = "PSEA5414", ShippingStateID = 1 },
                        new { ID = 5, Identifier = "TQFG1670", ShippingStateID = 4 },
                        new { ID = 6, Identifier = "ONBP9447", ShippingStateID = 5 },
                        new { ID = 7, Identifier = "DEQH4567", ShippingStateID = 3 },
                        new { ID = 8, Identifier = "DEZG7316", ShippingStateID = 3 },
                        new { ID = 9, Identifier = "JWQE3673", ShippingStateID = 4 },
                        new { ID = 10, Identifier = "AYDX9669", ShippingStateID = 5 },
                        new { ID = 11, Identifier = "HWQG8867", ShippingStateID = 5 },
                        new { ID = 12, Identifier = "UZQP8086", ShippingStateID = 3 },
                        new { ID = 13, Identifier = "OHIQ8948", ShippingStateID = 2 },
                        new { ID = 14, Identifier = "BNYR8994", ShippingStateID = 2 },
                        new { ID = 15, Identifier = "CJFJ6168", ShippingStateID = 5 },
                        new { ID = 16, Identifier = "VGFR1118", ShippingStateID = 3 },
                        new { ID = 17, Identifier = "XXHB5194", ShippingStateID = 4 },
                        new { ID = 18, Identifier = "XUBE6336", ShippingStateID = 5 },
                        new { ID = 19, Identifier = "JJBU8622", ShippingStateID = 3 },
                        new { ID = 20, Identifier = "APZK2256", ShippingStateID = 3 },
                        new { ID = 21, Identifier = "SKKQ7933", ShippingStateID = 3 },
                        new { ID = 22, Identifier = "HXHU7581", ShippingStateID = 5 },
                        new { ID = 23, Identifier = "BZBF7933", ShippingStateID = 1 },
                        new { ID = 24, Identifier = "DYUF9925", ShippingStateID = 2 },
                        new { ID = 25, Identifier = "YAKT6976", ShippingStateID = 3 },
                        new { ID = 26, Identifier = "OMTU4187", ShippingStateID = 1 },
                        new { ID = 27, Identifier = "IGAN8911", ShippingStateID = 4 },
                        new { ID = 28, Identifier = "SPQC7784", ShippingStateID = 5 },
                        new { ID = 29, Identifier = "KVVW3451", ShippingStateID = 1 },
                        new { ID = 30, Identifier = "SMLE7509", ShippingStateID = 4 },
                        new { ID = 31, Identifier = "ENFW3273", ShippingStateID = 2 },
                        new { ID = 32, Identifier = "FGQA8695", ShippingStateID = 3 },
                        new { ID = 33, Identifier = "CQBC5530", ShippingStateID = 3 },
                        new { ID = 34, Identifier = "OVGN4250", ShippingStateID = 5 },
                        new { ID = 35, Identifier = "ORFO1748", ShippingStateID = 5 },
                        new { ID = 36, Identifier = "QDOG4306", ShippingStateID = 2 },
                        new { ID = 37, Identifier = "MVIK8823", ShippingStateID = 3 },
                        new { ID = 38, Identifier = "GKZI8174", ShippingStateID = 4 },
                        new { ID = 39, Identifier = "DQZA6697", ShippingStateID = 5 },
                        new { ID = 40, Identifier = "NQDJ3754", ShippingStateID = 3 },
                        new { ID = 41, Identifier = "AQET4445", ShippingStateID = 4 },
                        new { ID = 42, Identifier = "ZVGS6497", ShippingStateID = 4 },
                        new { ID = 43, Identifier = "CEZT3471", ShippingStateID = 5 },
                        new { ID = 44, Identifier = "WGWO4839", ShippingStateID = 3 },
                        new { ID = 45, Identifier = "WPNR7777", ShippingStateID = 4 },
                        new { ID = 46, Identifier = "FCNT4344", ShippingStateID = 2 },
                        new { ID = 47, Identifier = "IMAG4241", ShippingStateID = 5 },
                        new { ID = 48, Identifier = "KLAI9482", ShippingStateID = 3 },
                        new { ID = 49, Identifier = "XTJE5492", ShippingStateID = 1 }
                    );
                });

            modelBuilder.Entity("Probafeladat.Models.ShippingState", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Sequence");

                    b.Property<string>("Short")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("ID");

                    b.ToTable("ShippingStates");

                    b.HasData(
                        new { ID = 1, Description = "Csomag a feladónál. Futárra vár.", Sequence = 1, Short = "WfpU", State = "Waiting for Pick Up" },
                        new { ID = 2, Description = "Csomag a futárnál. Depóba tart.", Sequence = 2, Short = "PU", State = "Picked Up" },
                        new { ID = 3, Description = "Depóban van. Kiszállításra vár", Sequence = 3, Short = "ID", State = "In Depot" },
                        new { ID = 4, Description = "Kiszállítás alatt áll. Célba tart.", Sequence = 4, Short = "OD", State = "On Delivery" },
                        new { ID = 5, Description = "Kiszállítva", Sequence = 5, Short = "DD", State = "Delivered" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Probafeladat.Models.Package", b =>
                {
                    b.HasOne("Probafeladat.Models.ShippingState", "ShippingState")
                        .WithMany()
                        .HasForeignKey("ShippingStateID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
